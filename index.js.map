{"version":3,"file":"index.js","sources":["source/index.js"],"sourcesContent":["\r\nexport class MapOfSets {\r\n  constructor() {\r\n    this.storage = new Map();\r\n  }\r\n\r\n  /**\r\n   * Check if key exists\r\n   * @param {*} key\r\n   */\r\n  has(key) {\r\n    const values = this.storage.get(key);\r\n\r\n    return values && values.size;\r\n  }\r\n\r\n  /**\r\n   * Check if value exists for key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\r\n  hasValue(key, value) {\r\n    const values = this.storage.get(key);\r\n\r\n    return values && values.has(value);\r\n  }\r\n\r\n  /**\r\n   * Get Set of values for key\r\n   * @param {*} key\r\n   */\r\n  get(key) {\r\n    return this.storage.get(key);\r\n  }\r\n\r\n  /**\r\n   * List values for key, returns empty array if no key nor values stored\r\n   * @param {*} key\r\n   */\r\n  list(key) {\r\n    const values = this.storage.get(key);\r\n\r\n    return values ? Array.from(values) : [];\r\n  }\r\n\r\n  /**\r\n   * Call callback for each value of each key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {Function} callback\r\n   */\r\n  forEach(callback) {\r\n    this.storage.forEach((values, key) => values.forEach((value) => callback(value, key, this)));\r\n  }\r\n\r\n  /**\r\n   * Call callback function for each value of specified key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {*} key\r\n   * @param {Function} callback\r\n   */\r\n  eachValue(key, callback) {\r\n    const values = this.storage.get(key);\r\n\r\n    if (values) {\r\n      values.forEach((value) => callback(value, key, this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add to new value to key.\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\r\n  add(key, value) {\r\n    const values = this.storage.get(key);\r\n\r\n    if (values) {\r\n      values.add(value);\r\n    } else {\r\n      this.storage.set(key, new Set([value]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace all values for key\r\n   * @param {*} key\r\n   * @param {Set} types\r\n   */\r\n  set(key, values) {\r\n    if (!values || values.size === 0) {\r\n      this.remove(key);\r\n      return;\r\n    }\r\n\r\n    this.storage.set(key, new Set(values));\r\n  }\r\n\r\n  /**\r\n   * Remove all values for key\r\n   * @param {*} key\r\n   */\r\n  remove(key) {\r\n    this.storage.delete(key);\r\n  }\r\n\r\n  /**\r\n   * Remove single value from key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\r\n  removeValue(key, value) {\r\n    const values = this.storage.get(key);\r\n\r\n    if (values) {\r\n      values.delete(value);\r\n\r\n      if (!values.size) {\r\n        this.remove(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clone all key-value stores\r\n   */\r\n  clone() {\r\n    const target = new MapOfSets();\r\n    this.storage.forEach((values, key) => target.set(key, new Set(values)));\r\n\r\n    return target;\r\n  }\r\n}\r\n\r\nexport const createMapOfSets = () => new MapOfSets();\r\n\r\nexport default MapOfSets;\r\n"],"names":["MapOfSets","constructor","storage","Map","has","key","values","get","size","hasValue","value","list","Array","from","forEach","callback","eachValue","add","set","Set","remove","delete","removeValue","clone","target","createMapOfSets"],"mappings":";;;;AACO,MAAMA,SAAN,CAAgB;EACrBC,WAAW,GAAG;SACPC,OAAL,GAAe,IAAIC,GAAJ,EAAf;;;;;;;;EAOFC,GAAG,CAACC,GAAD,EAAM;UACDC,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;WAEOC,MAAM,IAAIA,MAAM,CAACE,IAAxB;;;;;;;;;EAQFC,QAAQ,CAACJ,GAAD,EAAMK,KAAN,EAAa;UACbJ,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;WAEOC,MAAM,IAAIA,MAAM,CAACF,GAAP,CAAWM,KAAX,CAAjB;;;;;;;;EAOFH,GAAG,CAACF,GAAD,EAAM;WACA,KAAKH,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAP;;;;;;;;EAOFM,IAAI,CAACN,GAAD,EAAM;UACFC,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;WAEOC,MAAM,GAAGM,KAAK,CAACC,IAAN,CAAWP,MAAX,CAAH,GAAwB,EAArC;;;;;;;;;EAQFQ,OAAO,CAACC,QAAD,EAAW;SACXb,OAAL,CAAaY,OAAb,CAAqB,CAACR,MAAD,EAASD,GAAT,KAAiBC,MAAM,CAACQ,OAAP,CAAgBJ,KAAD,IAAWK,QAAQ,CAACL,KAAD,EAAQL,GAAR,EAAa,IAAb,CAAlC,CAAtC;;;;;;;;;;EASFW,SAAS,CAACX,GAAD,EAAMU,QAAN,EAAgB;UACjBT,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;;QAEIC,MAAJ,EAAY;MACVA,MAAM,CAACQ,OAAP,CAAgBJ,KAAD,IAAWK,QAAQ,CAACL,KAAD,EAAQL,GAAR,EAAa,IAAb,CAAlC;;;;;;;;;;EASJY,GAAG,CAACZ,GAAD,EAAMK,KAAN,EAAa;UACRJ,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;;QAEIC,MAAJ,EAAY;MACVA,MAAM,CAACW,GAAP,CAAWP,KAAX;KADF,MAEO;WACAR,OAAL,CAAagB,GAAb,CAAiBb,GAAjB,EAAsB,IAAIc,GAAJ,CAAQ,CAACT,KAAD,CAAR,CAAtB;;;;;;;;;;EASJQ,GAAG,CAACb,GAAD,EAAMC,MAAN,EAAc;QACX,CAACA,MAAD,IAAWA,MAAM,CAACE,IAAP,KAAgB,CAA/B,EAAkC;WAC3BY,MAAL,CAAYf,GAAZ;;;;SAIGH,OAAL,CAAagB,GAAb,CAAiBb,GAAjB,EAAsB,IAAIc,GAAJ,CAAQb,MAAR,CAAtB;;;;;;;;EAOFc,MAAM,CAACf,GAAD,EAAM;SACLH,OAAL,CAAamB,MAAb,CAAoBhB,GAApB;;;;;;;;;EAQFiB,WAAW,CAACjB,GAAD,EAAMK,KAAN,EAAa;UAChBJ,MAAM,GAAG,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,GAAjB,CAAf;;QAEIC,MAAJ,EAAY;MACVA,MAAM,CAACe,MAAP,CAAcX,KAAd;;UAEI,CAACJ,MAAM,CAACE,IAAZ,EAAkB;aACXY,MAAL,CAAYf,GAAZ;;;;;;;;;EAQNkB,KAAK,GAAG;UACAC,MAAM,GAAG,IAAIxB,SAAJ,EAAf;SACKE,OAAL,CAAaY,OAAb,CAAqB,CAACR,MAAD,EAASD,GAAT,KAAiBmB,MAAM,CAACN,GAAP,CAAWb,GAAX,EAAgB,IAAIc,GAAJ,CAAQb,MAAR,CAAhB,CAAtC;WAEOkB,MAAP;;;;AAIJ,MAAaC,eAAe,GAAG,MAAM,IAAIzB,SAAJ,EAA9B;;;;;;"}